"""
Django settings for _LGM project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

ENV = os.environ.get('ENV', 'dev')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# for vue.js spa development
CORS_ALLOWED_ORIGINS = [
    # Vue.js site
    "http://localhost:8080",
    "http://127.0.0.1:8080",
]
CORS_ORIGIN_ALLOW_ALL = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", 'django-insecure- change this later')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = str(os.environ.get('DEBUG')) == "1"

ALLOWED_HOSTS = ['127.0.0.1']
ALLOWED_HOSTS.extend(
    filter(
        None,  # remove empty strings from the list
        os.environ.get('ALLOWED_HOSTS', '').split(',')
    )
)

CSRF_TRUSTED_ORIGINS = [
    'https://www.rpgadventure.eu',
    'https://rpgadventure.eu',
    ]


if DEBUG:
    ALLOWED_HOSTS += [os.environ.get('ALLOWED_HOST')]


INSTALLED_APPS = [
    '_adminplus',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd party
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'django_silly_auth',
    'django_silly_stripe',
    'django_silly_adminplus',

    # local
    'app_cdn',
    '_users',
    '_deployment',
    'campain_books',
    'subscriptions',
    'home',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '_LGM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '_LGM.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


# Database
if os.environ.get('USE_POSTGRES', '1') == '1':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('POSTGRES_DB', 'django_pg_db'),
            'USER': os.environ.get('POSTGRES_USER', 'wrong_user_env_issue'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'postgres'),
            'HOST': os.environ.get('POSTGRES_HOST', 'db'),
            'PORT': os.environ.get('POSTGRES_PORT', '5432'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-US'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATICFILES_DIRS = ['static/', ]

STATIC_URL = 'static/'
MEDIA_URL = 'cdn/'
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

if DEBUG:
    STATIC_ROOT = 'staticfiles/'
    MEDIA_ROOT = 'mediafiles/'
else:
    STATIC_ROOT = '/vol/web/static/'
    MEDIA_ROOT = '/vol/web/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
}


# EMAIL
if os.environ.get('EMAIL_IS_CONFIGURED', '0') == '1':
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', "localhost")
EMAIL_PORT = os.environ.get('EMAIL_PORT', "25")
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', "email@email.com")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', "testpass1")
EMAIL_USE_SSL = os.environ.get('EMAIL_USE_SSL', '0') == '1'

AUTH_USER_MODEL = '_users.User'

SILLY_AUTH = {
    "SITE_NAME": "RPGAdventure.eu",
    "DELETE_UNCONFIRMED_TIME": 0,
    "DSA_PREFIX": "",
    "AUTO_SET": "API",
    "API_EMAIL_LOGIN_LINK": "http://localhost:8080/?#/login_from_email/",
    "USER_INFOS_EXCLUDE": [
        'password', 'is_superuser', 'is_staff', 'is_active', 'new_email',
        'groups', 'user_permissions', 'last_login', 'is_confirmed',
        'first_name', 'last_name',
    ],
    "EMAIL_TERMINAL_PRINT": os.environ.get('EMAIL_TERMINAL_PRINT', '0') == '1',
}

if not DEBUG:
    SILLY_AUTH['API_EMAIL_LOGIN_LINK'] = "http://rpgadventure.eu/?#/login_from_email/"


SILLY_STRIPE = {
    'AUTO_SET': 'SPA',  # 'CLASSIC' or 'SPA'
    'DSS_PREFIX': '',
    'USE_SUBSCRIPTIONS_CANCEL': False,
    'USE_CHECKOUT': False,  # custom checkout instead
    'DSS_SECRET_KEY': os.environ.get('DSS_SECRET_KEY'),
    'DSS_PUBLIC_KEY': os.environ.get('DSS_PUBLIC_KEY'),
    # 'DSS_RESTRICTED_KEY': 'rk_xxxxxx',  # optionnal
    'DSS_WEBHOOK_SECRET': os.environ.get('DSS_WEBHOOK_SECRET'),
    'SUBSCRIPTION_CANCEL': 'PERIOD',  # 'NOW' or 'PERIOD'
    'SUCCESS_URL': 'http://localhost:8080/?#/account',
    'CANCEL_URL': 'http://localhost:8080/?#/account',
    'PORTAL_BACK_URL': 'http://localhost:8080/?#/account',
    'PRINT_DEV_LOGS': False,
}

# CDN
CDN_EXCLUDED_NAMES = [
    'sitefiles',
    'sitesfiles',
]
